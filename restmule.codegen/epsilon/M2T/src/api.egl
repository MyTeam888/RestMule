[% import "../templates/templates.egl"; %]
package restmule.[%= name %].api;

import org.apache.commons.lang3.Validate;
import restmule.core.client.IClientBuilder;
import restmule.core.data.IData;
import restmule.core.data.IDataSet;
import restmule.core.session.ISession;
[% for (c in scopes) { %]
import restmule.[%= name %].client.[%= c.scope %]Api;
import restmule.[%= name %].client.I[%= c.scope %]Api;
[% } %]import restmule.[%= name %].model.*;
import restmule.[%= name %].session.[%= R.name %]Session;

public class [%= R.name %]Api  {

	[%= creators(R.name, R.name) %]
	
	/** BUILDER */
	[%= builder(R.name) %]
	
	/** CLIENT */
	private static class [%= R.name %]Client implements I[%= R.name %]Api {
		
		[% for (c in scopes) { %]
		private I[%= c.scope.firstToUpperCase() %]Api [%= c.scope.firstToLowerCase() %]Client;
		[% } %]
		
		[%= R.name %]Client(ISession session, boolean activeCaching) {
			if (session == null) {
				session = [%= R.name %]Session.createPublic(); 
			}	
			[% for (c in scopes) { %]
			[%= c.scope.firstToLowerCase() %]Client = [%= c.scope.firstToUpperCase() %]Api.create()
				.setSession([%= R.name %]Session.Factory.copy(session))
				.setActiveCaching(activeCaching)
				.build();
			[% } %]
		}

		/** WRAPED METHODS */
		[% for (c in scopes) { %]
		[% for (r in c.getResponses()) { %]
		[%= r.mainRequest() %]
		[% } %]
		[% } %]
	}
}
